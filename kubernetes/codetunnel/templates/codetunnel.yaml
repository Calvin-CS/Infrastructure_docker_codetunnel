apiVersion: apps/v1
kind: Deployment
metadata:
  name: codetunnel-{{ default "staging" .Release.Namespace }}
  namespace: {{ default "staging" .Release.Namespace }}
  labels:
    app: codetunnel-{{ default "staging" .Release.Namespace }}
spec:
  {{ if ne .Release.Namespace "production" }}replicas: 1{{- else }}replicas: 1{{- end }}
  selector:
    matchLabels:
      app: codetunnel-{{ default "staging" .Release.Namespace }}
  template:
    metadata:
      annotations:
        releaseTime: {{ dateInZone "2006-01-02 15:04:05Z" (now) "UTC"| quote }}
      labels:
        app: codetunnel-{{ default "staging" .Release.Namespace }}
        {{ if ne .Release.Namespace "production" }}name: code-tunnel-{{ .Release.Namespace }}{{- else }}hostname: code-tunnel{{- end }}
    spec:
      {{ if ne .Release.Namespace "production" }}hostname: code-tunnel-{{ .Release.Namespace }}{{- else }}hostname: code-tunnel{{- end }} 
      dnsPolicy: Default
      dnsConfig:
        searches:
          - cs.calvin.edu
      containers:
      - name: codetunnel-{{ default "staging" .Release.Namespace }}
        image: {{ .Values.image.registry }}/{{ .Values.image.name }}:{{ default "latest" .Values.image.tag }}
        ports:
        - containerPort: 22
        resources:
          requests:
            memory: "1Gi"
            cpu: "250m"  # 0.25 CPU
          limits:
            memory: "6.5Gi"
            cpu: "1500m"  # 1.5 CPU
        volumeMounts:
        - mountPath: /home
          name: mount0
        - mountPath: /rprojects
          name: mount1
        - mountPath: /opt/R
          name: mount2
          readOnly: true
        - mountPath: /opt/python
          name: mount3
          readOnly: true
        - mountPath: /opt/anaconda
          name: mount4
          readOnly: true
      volumes:
      - name: mount0
        persistentVolumeClaim:
          claimName: pvc-nfs-katzstunnel-home-{{ default "staging" .Release.Namespace }}
      - name: mount1
        persistentVolumeClaim:
          claimName: pvc-nfs-katzstunnel-rprojects-{{ default "staging" .Release.Namespace }}
      - name: mount2
        persistentVolumeClaim:
          claimName: pvc-nfs-r-int-r-{{ default "staging" .Release.Namespace }}
      - name: mount3
        persistentVolumeClaim:
          claimName: pvc-nfs-r-int-python-{{ default "staging" .Release.Namespace }}
      - name: mount4
        persistentVolumeClaim:
          claimName: pvc-nfs-r-int-anaconda-{{ default "staging" .Release.Namespace }}
---
apiVersion: v1
kind: Service
metadata:
  name: codetunnel-{{ default "staging" .Release.Namespace }}
  namespace: {{ default "staging" .Release.Namespace }}
  annotations:
    external-dns.alpha.kubernetes.io/hostname: code-tunnel{{- if ne .Release.Namespace "production" }}-{{ default "staging" .Release.Namespace }}{{- end }}.{{ .Values.dns.name }}
    service.beta.kubernetes.io/azure-dns-label-name: calvincs-code-tunnel{{- if ne .Release.Namespace "production" }}-{{ default "staging" .Release.Namespace }}{{- end }}
spec:
  type: LoadBalancer
  ports:
  - port: 22
    targetPort: 22
    name: ssh
    protocol: TCP
  selector:
    app: codetunnel-{{ default "staging" .Release.Namespace }}
---
# scaler disabled due to quick-shutdown killing sessions
#{{ if eq .Release.Namespace "production" }}
#apiVersion: autoscaling/v1
#kind: HorizontalPodAutoscaler
#metadata:
  #name: codetunnel-{{ default "staging" .Release.Namespace }}
#spec:
  #scaleTargetRef:
    #apiVersion: apps/v1
    #kind: Deployment
    #name: codetunnel-{{ default "staging" .Release.Namespace }}
  #minReplicas: 2
  #maxReplicas: 10
  #targetCPUUtilizationPercentage: 90
  #metrics:
  #- type: Resource
  # resource:
  #   name: cpu
  #   target:
  #     type: Utilization
  #     averageUtilization: 70
  #- type: Resource
  #resource:
  #   name: memory
  #   target:
  #     type: Utilization
  #     averageUtilization: 70
#{{- end }}
